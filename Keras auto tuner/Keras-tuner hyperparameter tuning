{"cells":[{"cell_type":"markdown","metadata":{"id":"fbiRsvchXUou"},"source":["이 노트북은 [케라스 창시자에게 배우는 딥러닝 2판](https://tensorflow.blog/kerasdl2/)의 예제 코드를 담고 있습니다.\n","\n","<table align=\"left\">\n","    <tr>\n","        <td>\n","            <a href=\"https://colab.research.google.com/github/rickiepark/deep-learning-with-python-2nd/blob/main/chapter13_best-practices-for-the-real-world.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>\n","        </td>\n","    </tr>\n","</table>"]},{"cell_type":"markdown","metadata":{"id":"quJRHL2HXUo0"},"source":["# 실전 문제 해결을 위한 모범 사례"]},{"cell_type":"markdown","metadata":{"id":"8CwDHL91XUo1"},"source":["## 모델의 최대 성능을 끌어 내기"]},{"cell_type":"markdown","metadata":{"id":"195OYN7CXUo2"},"source":["### 하이퍼파라미터 최적화"]},{"cell_type":"markdown","metadata":{"id":"aZf03P7OXUo2"},"source":["#### KerasTuner 사용하기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8zYkNiN0XUo3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661405293851,"user_tz":-540,"elapsed":8483,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"62819456-be59-470c-9d09-dfdb80cc115e"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[K     |████████████████████████████████| 135 kB 7.4 MB/s \n","\u001b[K     |████████████████████████████████| 1.6 MB 46.2 MB/s \n","\u001b[?25h"]}],"source":["!pip install keras-tuner -q"]},{"cell_type":"markdown","metadata":{"id":"hjmsLua7XUo4"},"source":["**KerasTuner 모델 구축 함수**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K70tKB7IXUo4"},"outputs":[],"source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","\n","def build_model(hp):\n","    units = hp.Int(name=\"units\", min_value=16, max_value=64, step=16)\n","    model = keras.Sequential([\n","        layers.Dense(units, activation=\"relu\"),\n","        layers.Dense(10, activation=\"softmax\")\n","    ])\n","    optimizer = hp.Choice(name=\"optimizer\", values=[\"rmsprop\", \"adam\"])\n","    model.compile(\n","        optimizer=optimizer,\n","        loss=\"sparse_categorical_crossentropy\",\n","        metrics=[\"accuracy\"])\n","    return model"]},{"cell_type":"markdown","metadata":{"id":"ViihE01lXUo5"},"source":["**KerasTuner의 `HyperModel`**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fAIRTD7BXUo6","outputId":"8ecd864c-82dd-4ebe-cbdd-cf661af6000f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661405297500,"user_tz":-540,"elapsed":470,"user":{"displayName":"박준규","userId":"16577167999398926509"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: DeprecationWarning: `import kerastuner` is deprecated, please use `import keras_tuner`.\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}],"source":["import kerastuner as kt\n","\n","class SimpleMLP(kt.HyperModel):\n","    def __init__(self, num_classes):\n","        self.num_classes = num_classes\n","\n","    def build(self, hp):\n","        units = hp.Int(name=\"units\", min_value=16, max_value=64, step=16)\n","        model = keras.Sequential([\n","            layers.Dense(units, activation=\"relu\"),\n","            layers.Dense(self.num_classes, activation=\"softmax\")\n","        ])\n","        optimizer = hp.Choice(name=\"optimizer\", values=[\"rmsprop\", \"adam\"])\n","        model.compile(\n","            optimizer=optimizer,\n","            loss=\"sparse_categorical_crossentropy\",\n","            metrics=[\"accuracy\"])\n","        return model\n","\n","hypermodel = SimpleMLP(num_classes=10)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VpbOs2pvXUo8"},"outputs":[],"source":["tuner = kt.BayesianOptimization(\n","    build_model,\n","    objective=\"val_accuracy\",\n","    max_trials=100,\n","    executions_per_trial=2,\n","    directory=\"mnist_kt_test\",\n","    overwrite=True,\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y53bGlm5XUo8","outputId":"3239c0ed-8a4c-4d78-9dea-de1a616f152d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661405300715,"user_tz":-540,"elapsed":15,"user":{"displayName":"박준규","userId":"16577167999398926509"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Search space summary\n","Default search space size: 2\n","units (Int)\n","{'default': None, 'conditions': [], 'min_value': 16, 'max_value': 64, 'step': 16, 'sampling': None}\n","optimizer (Choice)\n","{'default': 'rmsprop', 'conditions': [], 'values': ['rmsprop', 'adam'], 'ordered': False}\n"]}],"source":["tuner.search_space_summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2G7YIXhSXUo9","outputId":"38686ad3-2604-4798-d27b-2dce783155f2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426455,"user_tz":-540,"elapsed":6125752,"user":{"displayName":"박준규","userId":"16577167999398926509"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Trial 100 Complete [00h 00m 44s]\n","val_accuracy: 0.9743500053882599\n","\n","Best val_accuracy So Far: 0.9763499796390533\n","Total elapsed time: 01h 42m 06s\n"]}],"source":["(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()\n","x_train = x_train.reshape((-1, 28 * 28)).astype(\"float32\") / 255\n","x_test = x_test.reshape((-1, 28 * 28)).astype(\"float32\") / 255\n","x_train_full = x_train[:]\n","y_train_full = y_train[:]\n","num_val_samples = 10000\n","x_train, x_val = x_train[:-num_val_samples], x_train[-num_val_samples:]\n","y_train, y_val = y_train[:-num_val_samples], y_train[-num_val_samples:]\n","callbacks = [\n","    keras.callbacks.EarlyStopping(monitor=\"val_loss\", patience=5),\n","]\n","tuner.search(\n","    x_train, y_train,\n","    batch_size=128,\n","    epochs=100,\n","    validation_data=(x_val, y_val),\n","    callbacks=callbacks,\n","    verbose=2,\n",")"]},{"cell_type":"markdown","metadata":{"id":"_73tWF13XUo9"},"source":["**최상의 하이퍼파라미터 설정 확인하기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1wQgytGeXUo-"},"outputs":[],"source":["top_n = 4\n","best_hps = tuner.get_best_hyperparameters(top_n)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iyQsuqxzXUo_"},"outputs":[],"source":["def get_best_epoch(hp):\n","    model = build_model(hp)\n","    callbacks=[\n","        keras.callbacks.EarlyStopping(\n","            monitor=\"val_loss\", mode=\"min\", patience=10)\n","    ]\n","    history = model.fit(\n","        x_train, y_train,\n","        validation_data=(x_val, y_val),\n","        epochs=100,\n","        batch_size=128,\n","        callbacks=callbacks)\n","    val_loss_per_epoch = history.history[\"val_loss\"]\n","    best_epoch = val_loss_per_epoch.index(min(val_loss_per_epoch)) + 1\n","    print(f\"Best epoch: {best_epoch}\")\n","    return best_epoch"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qViB6BIkXUpB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426962,"user_tz":-540,"elapsed":41,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"9cf2c510-1cac-488b-8673-f864cb9d9ca5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<keras_tuner.engine.hyperparameters.HyperParameters at 0x7ff1a8b3a990>,\n"," <keras_tuner.engine.hyperparameters.HyperParameters at 0x7ff1a96ca650>,\n"," <keras_tuner.engine.hyperparameters.HyperParameters at 0x7ff1a872d290>,\n"," <keras_tuner.engine.hyperparameters.HyperParameters at 0x7ff23c034d50>]"]},"metadata":{},"execution_count":9}],"source":["best_hps"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W9uy5-VcXUpB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426963,"user_tz":-540,"elapsed":38,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"1b07918a-199c-486c-d1e8-3dc4a7915e39"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'rmsprop'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}],"source":["best_hps[0].Choice(name=\"optimizer\", values=[\"rmsprop\", \"adam\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q3N0jx4gXUpC"},"outputs":[],"source":["model = build_model(best_hps[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"47gfxWMUXUpC"},"outputs":[],"source":["from keras_tuner.engine.hyperparameters import Int"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mQDKhVEbXUpC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426968,"user_tz":-540,"elapsed":39,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"34d3a7b3-c31c-4122-97fa-185a546a7d00"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":13}],"source":["best_hps[0]._conditions_are_active(Int(name=\"units\", min_value=0, max_value=1).conditions)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ifbzKwhUXUpC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426968,"user_tz":-540,"elapsed":34,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"57394814-3abc-4367-8c5c-df283a0f045e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["defaultdict(list,\n","            {'units': [Int(name: \"units\", min_value: 16, max_value: 64, step: 16, sampling: None, default: 16)],\n","             'optimizer': [Choice(name: \"optimizer\", values: ['rmsprop', 'adam'], ordered: False, default: rmsprop)]})"]},"metadata":{},"execution_count":14}],"source":["best_hps[0]._hps"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C5uh5ruMXUpD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426969,"user_tz":-540,"elapsed":32,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"d664c220-921d-4439-cfd9-7a7e754c267e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":15}],"source":["best_hps[0]._exists('units', [])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yzmhz0MxXUpD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426969,"user_tz":-540,"elapsed":30,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"b8f09337-3499-4c8a-c46f-e720a77cd4b3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'units': 64, 'optimizer': 'rmsprop'}"]},"metadata":{},"execution_count":16}],"source":["best_hps[0].values"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ryXjR9q_XUpE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426970,"user_tz":-540,"elapsed":27,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"78d0ab85-8375-4a97-f1bd-c286dd404334"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["64"]},"metadata":{},"execution_count":17}],"source":["best_hps[0].Int(name=\"units\", min_value=0, max_value=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vIfnDXglXUpE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411426970,"user_tz":-540,"elapsed":23,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"303ce3b4-5663-4fd7-9738-730cc5962e1a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'name': 'sequential_1',\n"," 'layers': [{'class_name': 'Dense',\n","   'config': {'name': 'dense_2',\n","    'trainable': True,\n","    'dtype': 'float32',\n","    'units': 64,\n","    'activation': 'relu',\n","    'use_bias': True,\n","    'kernel_initializer': {'class_name': 'GlorotUniform',\n","     'config': {'seed': None}},\n","    'bias_initializer': {'class_name': 'Zeros', 'config': {}},\n","    'kernel_regularizer': None,\n","    'bias_regularizer': None,\n","    'activity_regularizer': None,\n","    'kernel_constraint': None,\n","    'bias_constraint': None}},\n","  {'class_name': 'Dense',\n","   'config': {'name': 'dense_3',\n","    'trainable': True,\n","    'dtype': 'float32',\n","    'units': 10,\n","    'activation': 'softmax',\n","    'use_bias': True,\n","    'kernel_initializer': {'class_name': 'GlorotUniform',\n","     'config': {'seed': None}},\n","    'bias_initializer': {'class_name': 'Zeros', 'config': {}},\n","    'kernel_regularizer': None,\n","    'bias_regularizer': None,\n","    'activity_regularizer': None,\n","    'kernel_constraint': None,\n","    'bias_constraint': None}}]}"]},"metadata":{},"execution_count":18}],"source":["model.get_config()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V8QyRGcNXUpE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411773945,"user_tz":-540,"elapsed":346996,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"0f7603e7-3ad0-42f4-a6b9-59baba433521"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.4225 - accuracy: 0.8856 - val_loss: 0.2336 - val_accuracy: 0.9339\n","Epoch 2/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.2217 - accuracy: 0.9363 - val_loss: 0.1724 - val_accuracy: 0.9499\n","Epoch 3/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1711 - accuracy: 0.9510 - val_loss: 0.1446 - val_accuracy: 0.9589\n","Epoch 4/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.1402 - accuracy: 0.9587 - val_loss: 0.1332 - val_accuracy: 0.9617\n","Epoch 5/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1185 - accuracy: 0.9659 - val_loss: 0.1186 - val_accuracy: 0.9659\n","Epoch 6/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1032 - accuracy: 0.9695 - val_loss: 0.1087 - val_accuracy: 0.9692\n","Epoch 7/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0913 - accuracy: 0.9733 - val_loss: 0.1117 - val_accuracy: 0.9678\n","Epoch 8/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0813 - accuracy: 0.9762 - val_loss: 0.1017 - val_accuracy: 0.9702\n","Epoch 9/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0732 - accuracy: 0.9785 - val_loss: 0.1022 - val_accuracy: 0.9709\n","Epoch 10/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0669 - accuracy: 0.9817 - val_loss: 0.1007 - val_accuracy: 0.9696\n","Epoch 11/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0611 - accuracy: 0.9830 - val_loss: 0.0972 - val_accuracy: 0.9707\n","Epoch 12/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0554 - accuracy: 0.9841 - val_loss: 0.0996 - val_accuracy: 0.9715\n","Epoch 13/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0511 - accuracy: 0.9854 - val_loss: 0.0969 - val_accuracy: 0.9733\n","Epoch 14/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0477 - accuracy: 0.9866 - val_loss: 0.0948 - val_accuracy: 0.9724\n","Epoch 15/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0443 - accuracy: 0.9880 - val_loss: 0.0936 - val_accuracy: 0.9736\n","Epoch 16/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0405 - accuracy: 0.9889 - val_loss: 0.1009 - val_accuracy: 0.9718\n","Epoch 17/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0375 - accuracy: 0.9894 - val_loss: 0.0991 - val_accuracy: 0.9735\n","Epoch 18/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0348 - accuracy: 0.9908 - val_loss: 0.0968 - val_accuracy: 0.9751\n","Epoch 19/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0322 - accuracy: 0.9916 - val_loss: 0.0995 - val_accuracy: 0.9730\n","Epoch 20/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0299 - accuracy: 0.9919 - val_loss: 0.0987 - val_accuracy: 0.9733\n","Epoch 21/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0280 - accuracy: 0.9927 - val_loss: 0.0999 - val_accuracy: 0.9729\n","Epoch 22/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0256 - accuracy: 0.9932 - val_loss: 0.1041 - val_accuracy: 0.9736\n","Epoch 23/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0238 - accuracy: 0.9937 - val_loss: 0.1023 - val_accuracy: 0.9743\n","Epoch 24/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0217 - accuracy: 0.9947 - val_loss: 0.1041 - val_accuracy: 0.9737\n","Epoch 25/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0203 - accuracy: 0.9950 - val_loss: 0.1063 - val_accuracy: 0.9744\n","Best epoch: 15\n","Epoch 1/18\n","469/469 [==============================] - 2s 3ms/step - loss: 0.3947 - accuracy: 0.8942\n","Epoch 2/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.2033 - accuracy: 0.9427\n","Epoch 3/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.1543 - accuracy: 0.9560\n","Epoch 4/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.1256 - accuracy: 0.9644\n","Epoch 5/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.1070 - accuracy: 0.9701\n","Epoch 6/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0925 - accuracy: 0.9728\n","Epoch 7/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0819 - accuracy: 0.9760\n","Epoch 8/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0728 - accuracy: 0.9785\n","Epoch 9/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0663 - accuracy: 0.9806\n","Epoch 10/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0600 - accuracy: 0.9825\n","Epoch 11/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0543 - accuracy: 0.9841\n","Epoch 12/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0498 - accuracy: 0.9855\n","Epoch 13/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0453 - accuracy: 0.9870\n","Epoch 14/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0416 - accuracy: 0.9878\n","Epoch 15/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0385 - accuracy: 0.9891\n","Epoch 16/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0352 - accuracy: 0.9902\n","Epoch 17/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0327 - accuracy: 0.9905\n","Epoch 18/18\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0301 - accuracy: 0.9917\n","313/313 [==============================] - 1s 2ms/step - loss: 0.0868 - accuracy: 0.9764\n","Epoch 1/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.4324 - accuracy: 0.8856 - val_loss: 0.2378 - val_accuracy: 0.9337\n","Epoch 2/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.2233 - accuracy: 0.9362 - val_loss: 0.1817 - val_accuracy: 0.9497\n","Epoch 3/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1726 - accuracy: 0.9506 - val_loss: 0.1486 - val_accuracy: 0.9589\n","Epoch 4/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1415 - accuracy: 0.9598 - val_loss: 0.1377 - val_accuracy: 0.9603\n","Epoch 5/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1210 - accuracy: 0.9650 - val_loss: 0.1214 - val_accuracy: 0.9673\n","Epoch 6/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1052 - accuracy: 0.9696 - val_loss: 0.1137 - val_accuracy: 0.9671\n","Epoch 7/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0930 - accuracy: 0.9734 - val_loss: 0.1107 - val_accuracy: 0.9675\n","Epoch 8/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0835 - accuracy: 0.9755 - val_loss: 0.1051 - val_accuracy: 0.9711\n","Epoch 9/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0750 - accuracy: 0.9783 - val_loss: 0.1094 - val_accuracy: 0.9691\n","Epoch 10/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0674 - accuracy: 0.9811 - val_loss: 0.0973 - val_accuracy: 0.9719\n","Epoch 11/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0619 - accuracy: 0.9824 - val_loss: 0.0982 - val_accuracy: 0.9715\n","Epoch 12/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0564 - accuracy: 0.9842 - val_loss: 0.0959 - val_accuracy: 0.9727\n","Epoch 13/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0521 - accuracy: 0.9858 - val_loss: 0.1016 - val_accuracy: 0.9701\n","Epoch 14/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0484 - accuracy: 0.9864 - val_loss: 0.1033 - val_accuracy: 0.9698\n","Epoch 15/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0445 - accuracy: 0.9875 - val_loss: 0.0948 - val_accuracy: 0.9736\n","Epoch 16/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0411 - accuracy: 0.9887 - val_loss: 0.0952 - val_accuracy: 0.9739\n","Epoch 17/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0383 - accuracy: 0.9897 - val_loss: 0.0948 - val_accuracy: 0.9738\n","Epoch 18/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0354 - accuracy: 0.9902 - val_loss: 0.1011 - val_accuracy: 0.9730\n","Epoch 19/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0327 - accuracy: 0.9911 - val_loss: 0.1054 - val_accuracy: 0.9725\n","Epoch 20/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0304 - accuracy: 0.9919 - val_loss: 0.0980 - val_accuracy: 0.9745\n","Epoch 21/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0280 - accuracy: 0.9922 - val_loss: 0.1007 - val_accuracy: 0.9738\n","Epoch 22/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0260 - accuracy: 0.9934 - val_loss: 0.0976 - val_accuracy: 0.9743\n","Epoch 23/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0236 - accuracy: 0.9940 - val_loss: 0.1035 - val_accuracy: 0.9746\n","Epoch 24/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0225 - accuracy: 0.9940 - val_loss: 0.1023 - val_accuracy: 0.9750\n","Epoch 25/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0204 - accuracy: 0.9949 - val_loss: 0.1026 - val_accuracy: 0.9756\n","Epoch 26/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0191 - accuracy: 0.9953 - val_loss: 0.1048 - val_accuracy: 0.9751\n","Epoch 27/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0175 - accuracy: 0.9956 - val_loss: 0.1081 - val_accuracy: 0.9735\n","Best epoch: 17\n","Epoch 1/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0271 - accuracy: 0.9928\n","Epoch 2/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0257 - accuracy: 0.9929\n","Epoch 3/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0235 - accuracy: 0.9941\n","Epoch 4/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0219 - accuracy: 0.9944\n","Epoch 5/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0200 - accuracy: 0.9948\n","Epoch 6/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0186 - accuracy: 0.9953\n","Epoch 7/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0175 - accuracy: 0.9956\n","Epoch 8/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0161 - accuracy: 0.9959\n","Epoch 9/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0147 - accuracy: 0.9966\n","Epoch 10/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0139 - accuracy: 0.9965\n","Epoch 11/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0127 - accuracy: 0.9967\n","Epoch 12/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0113 - accuracy: 0.9976\n","Epoch 13/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0106 - accuracy: 0.9975\n","Epoch 14/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0101 - accuracy: 0.9975\n","Epoch 15/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0094 - accuracy: 0.9980\n","Epoch 16/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0084 - accuracy: 0.9981\n","Epoch 17/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0075 - accuracy: 0.9985\n","Epoch 18/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9983\n","Epoch 19/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0064 - accuracy: 0.9986\n","Epoch 20/20\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0059 - accuracy: 0.9988\n","313/313 [==============================] - 1s 2ms/step - loss: 0.1213 - accuracy: 0.9755\n","Epoch 1/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.4186 - accuracy: 0.8870 - val_loss: 0.2315 - val_accuracy: 0.9328\n","Epoch 2/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.2146 - accuracy: 0.9382 - val_loss: 0.1816 - val_accuracy: 0.9515\n","Epoch 3/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.1630 - accuracy: 0.9525 - val_loss: 0.1415 - val_accuracy: 0.9602\n","Epoch 4/100\n","391/391 [==============================] - 2s 5ms/step - loss: 0.1319 - accuracy: 0.9609 - val_loss: 0.1283 - val_accuracy: 0.9628\n","Epoch 5/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.1113 - accuracy: 0.9675 - val_loss: 0.1158 - val_accuracy: 0.9667\n","Epoch 6/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0964 - accuracy: 0.9721 - val_loss: 0.1078 - val_accuracy: 0.9678\n","Epoch 7/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0850 - accuracy: 0.9753 - val_loss: 0.1040 - val_accuracy: 0.9683\n","Epoch 8/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0763 - accuracy: 0.9779 - val_loss: 0.0993 - val_accuracy: 0.9703\n","Epoch 9/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0690 - accuracy: 0.9799 - val_loss: 0.0989 - val_accuracy: 0.9712\n","Epoch 10/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0621 - accuracy: 0.9818 - val_loss: 0.1021 - val_accuracy: 0.9704\n","Epoch 11/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0565 - accuracy: 0.9834 - val_loss: 0.0895 - val_accuracy: 0.9734\n","Epoch 12/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0522 - accuracy: 0.9848 - val_loss: 0.0917 - val_accuracy: 0.9745\n","Epoch 13/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0477 - accuracy: 0.9857 - val_loss: 0.0916 - val_accuracy: 0.9738\n","Epoch 14/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0441 - accuracy: 0.9879 - val_loss: 0.0902 - val_accuracy: 0.9738\n","Epoch 15/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0402 - accuracy: 0.9883 - val_loss: 0.0939 - val_accuracy: 0.9733\n","Epoch 16/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0372 - accuracy: 0.9893 - val_loss: 0.0897 - val_accuracy: 0.9740\n","Epoch 17/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0344 - accuracy: 0.9908 - val_loss: 0.0914 - val_accuracy: 0.9750\n","Epoch 18/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0315 - accuracy: 0.9914 - val_loss: 0.0978 - val_accuracy: 0.9730\n","Epoch 19/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0297 - accuracy: 0.9917 - val_loss: 0.0948 - val_accuracy: 0.9751\n","Epoch 20/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0267 - accuracy: 0.9927 - val_loss: 0.0942 - val_accuracy: 0.9748\n","Epoch 21/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0250 - accuracy: 0.9935 - val_loss: 0.0941 - val_accuracy: 0.9742\n","Best epoch: 11\n","Epoch 1/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0053 - accuracy: 0.9990\n","Epoch 2/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0049 - accuracy: 0.9991\n","Epoch 3/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0045 - accuracy: 0.9990\n","Epoch 4/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0040 - accuracy: 0.9993\n","Epoch 5/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0036 - accuracy: 0.9993\n","Epoch 6/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0033 - accuracy: 0.9994\n","Epoch 7/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0031 - accuracy: 0.9995\n","Epoch 8/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0028 - accuracy: 0.9996\n","Epoch 9/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0026 - accuracy: 0.9995\n","Epoch 10/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0024 - accuracy: 0.9995\n","Epoch 11/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0021 - accuracy: 0.9996\n","Epoch 12/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0020 - accuracy: 0.9997\n","Epoch 13/13\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0017 - accuracy: 0.9998\n","313/313 [==============================] - 1s 2ms/step - loss: 0.1530 - accuracy: 0.9742\n","Epoch 1/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.4423 - accuracy: 0.8812 - val_loss: 0.2300 - val_accuracy: 0.9365\n","Epoch 2/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.2149 - accuracy: 0.9382 - val_loss: 0.1796 - val_accuracy: 0.9501\n","Epoch 3/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1640 - accuracy: 0.9528 - val_loss: 0.1450 - val_accuracy: 0.9587\n","Epoch 4/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.1352 - accuracy: 0.9602 - val_loss: 0.1322 - val_accuracy: 0.9621\n","Epoch 5/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1146 - accuracy: 0.9670 - val_loss: 0.1247 - val_accuracy: 0.9634\n","Epoch 6/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.1007 - accuracy: 0.9706 - val_loss: 0.1150 - val_accuracy: 0.9673\n","Epoch 7/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0895 - accuracy: 0.9744 - val_loss: 0.1088 - val_accuracy: 0.9689\n","Epoch 8/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0802 - accuracy: 0.9770 - val_loss: 0.1046 - val_accuracy: 0.9701\n","Epoch 9/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0721 - accuracy: 0.9787 - val_loss: 0.1037 - val_accuracy: 0.9690\n","Epoch 10/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0662 - accuracy: 0.9807 - val_loss: 0.0974 - val_accuracy: 0.9725\n","Epoch 11/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0606 - accuracy: 0.9828 - val_loss: 0.0999 - val_accuracy: 0.9708\n","Epoch 12/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0555 - accuracy: 0.9839 - val_loss: 0.1004 - val_accuracy: 0.9711\n","Epoch 13/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0514 - accuracy: 0.9852 - val_loss: 0.1078 - val_accuracy: 0.9692\n","Epoch 14/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0467 - accuracy: 0.9865 - val_loss: 0.0961 - val_accuracy: 0.9727\n","Epoch 15/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0434 - accuracy: 0.9882 - val_loss: 0.0986 - val_accuracy: 0.9720\n","Epoch 16/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0402 - accuracy: 0.9888 - val_loss: 0.0984 - val_accuracy: 0.9726\n","Epoch 17/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0373 - accuracy: 0.9898 - val_loss: 0.0996 - val_accuracy: 0.9733\n","Epoch 18/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0344 - accuracy: 0.9906 - val_loss: 0.0983 - val_accuracy: 0.9730\n","Epoch 19/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0322 - accuracy: 0.9913 - val_loss: 0.1004 - val_accuracy: 0.9706\n","Epoch 20/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0298 - accuracy: 0.9921 - val_loss: 0.1007 - val_accuracy: 0.9737\n","Epoch 21/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0278 - accuracy: 0.9926 - val_loss: 0.0982 - val_accuracy: 0.9748\n","Epoch 22/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0259 - accuracy: 0.9932 - val_loss: 0.0956 - val_accuracy: 0.9731\n","Epoch 23/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0238 - accuracy: 0.9936 - val_loss: 0.1035 - val_accuracy: 0.9730\n","Epoch 24/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0219 - accuracy: 0.9946 - val_loss: 0.1036 - val_accuracy: 0.9734\n","Epoch 25/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0201 - accuracy: 0.9949 - val_loss: 0.1056 - val_accuracy: 0.9724\n","Epoch 26/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0186 - accuracy: 0.9955 - val_loss: 0.1044 - val_accuracy: 0.9732\n","Epoch 27/100\n","391/391 [==============================] - 2s 4ms/step - loss: 0.0174 - accuracy: 0.9957 - val_loss: 0.1100 - val_accuracy: 0.9729\n","Epoch 28/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0162 - accuracy: 0.9960 - val_loss: 0.1079 - val_accuracy: 0.9744\n","Epoch 29/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0148 - accuracy: 0.9968 - val_loss: 0.1111 - val_accuracy: 0.9727\n","Epoch 30/100\n","391/391 [==============================] - 1s 4ms/step - loss: 0.0142 - accuracy: 0.9967 - val_loss: 0.1091 - val_accuracy: 0.9724\n","Epoch 31/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0128 - accuracy: 0.9971 - val_loss: 0.1115 - val_accuracy: 0.9719\n","Epoch 32/100\n","391/391 [==============================] - 1s 3ms/step - loss: 0.0116 - accuracy: 0.9976 - val_loss: 0.1090 - val_accuracy: 0.9728\n","Best epoch: 22\n","Epoch 1/26\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0016 - accuracy: 0.9998\n","Epoch 2/26\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0014 - accuracy: 0.9998\n","Epoch 3/26\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0013 - accuracy: 0.9998\n","Epoch 4/26\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0012 - accuracy: 0.9998\n","Epoch 5/26\n","469/469 [==============================] - 1s 3ms/step - loss: 0.0010 - accuracy: 0.9999\n","Epoch 6/26\n","469/469 [==============================] - 1s 3ms/step - loss: 9.4734e-04 - accuracy: 0.9999\n","Epoch 7/26\n","469/469 [==============================] - 1s 3ms/step - loss: 8.8566e-04 - accuracy: 0.9999\n","Epoch 8/26\n","469/469 [==============================] - 1s 3ms/step - loss: 8.3811e-04 - accuracy: 0.9999\n","Epoch 9/26\n","469/469 [==============================] - 1s 3ms/step - loss: 6.9269e-04 - accuracy: 0.9999\n","Epoch 10/26\n","469/469 [==============================] - 1s 3ms/step - loss: 6.1344e-04 - accuracy: 1.0000\n","Epoch 11/26\n","469/469 [==============================] - 1s 3ms/step - loss: 6.2021e-04 - accuracy: 0.9999\n","Epoch 12/26\n","469/469 [==============================] - 1s 3ms/step - loss: 5.3699e-04 - accuracy: 0.9999\n","Epoch 13/26\n","469/469 [==============================] - 1s 3ms/step - loss: 5.3352e-04 - accuracy: 0.9999\n","Epoch 14/26\n","469/469 [==============================] - 1s 3ms/step - loss: 4.9169e-04 - accuracy: 0.9999\n","Epoch 15/26\n","469/469 [==============================] - 1s 3ms/step - loss: 3.7480e-04 - accuracy: 1.0000\n","Epoch 16/26\n","469/469 [==============================] - 1s 3ms/step - loss: 3.7215e-04 - accuracy: 0.9999\n","Epoch 17/26\n","469/469 [==============================] - 1s 3ms/step - loss: 3.3548e-04 - accuracy: 0.9999\n","Epoch 18/26\n","469/469 [==============================] - 1s 3ms/step - loss: 3.1788e-04 - accuracy: 1.0000\n","Epoch 19/26\n","469/469 [==============================] - 1s 3ms/step - loss: 2.5109e-04 - accuracy: 1.0000\n","Epoch 20/26\n","469/469 [==============================] - 2s 4ms/step - loss: 2.4709e-04 - accuracy: 1.0000\n","Epoch 21/26\n","469/469 [==============================] - 1s 3ms/step - loss: 2.4714e-04 - accuracy: 1.0000\n","Epoch 22/26\n","469/469 [==============================] - 1s 3ms/step - loss: 1.9950e-04 - accuracy: 1.0000\n","Epoch 23/26\n","469/469 [==============================] - 1s 3ms/step - loss: 1.7208e-04 - accuracy: 1.0000\n","Epoch 24/26\n","469/469 [==============================] - 1s 3ms/step - loss: 1.6506e-04 - accuracy: 1.0000\n","Epoch 25/26\n","469/469 [==============================] - 1s 3ms/step - loss: 1.3069e-04 - accuracy: 1.0000\n","Epoch 26/26\n","469/469 [==============================] - 1s 3ms/step - loss: 1.3199e-04 - accuracy: 1.0000\n","313/313 [==============================] - 1s 2ms/step - loss: 0.2135 - accuracy: 0.9730\n"]}],"source":["def get_best_trained_model(hp):\n","    best_epoch = get_best_epoch(hp)\n","    model.fit(\n","        x_train_full, y_train_full,\n","        batch_size=128, epochs=int(best_epoch * 1.2))\n","    return model\n","\n","best_models = []\n","for hp in best_hps:\n","    model = get_best_trained_model(hp)\n","    model.evaluate(x_test, y_test)\n","    best_models.append(model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NuXDHD6fXUpF"},"outputs":[],"source":["best_models = tuner.get_best_models(top_n)"]},{"cell_type":"markdown","metadata":{"id":"Vp-z1gLuXUpF"},"source":["#### 올바른 검색 공간을 만드는 기술"]},{"cell_type":"markdown","metadata":{"id":"oGCysrg2XUpF"},"source":["#### 하이퍼파라미터 튜닝의 미래: 자동화된 머신 러닝"]},{"cell_type":"markdown","metadata":{"id":"5rbb_NNVXUpF"},"source":["### 모델 앙상블"]},{"cell_type":"markdown","metadata":{"id":"wBN1JBSlXUpF"},"source":["## 대규모 모델 훈련하기"]},{"cell_type":"markdown","metadata":{"id":"tFXfY6wqXUpF"},"source":["### 혼합 정밀도로 GPU에서 훈련 속도 높이기"]},{"cell_type":"markdown","metadata":{"id":"8w8yHOu9XUpF"},"source":["#### 부동 소수점 정밀도 이해하기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qd-hN0N8XUpG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411774873,"user_tz":-540,"elapsed":35,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"dfd777b7-a849-452d-af98-e12fd2b6711b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tf.float64"]},"metadata":{},"execution_count":21}],"source":["import tensorflow as tf\n","import numpy as np\n","np_array = np.zeros((2, 2))\n","tf_tensor = tf.convert_to_tensor(np_array)\n","tf_tensor.dtype"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GP8W3TmvXUpG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1661411774874,"user_tz":-540,"elapsed":32,"user":{"displayName":"박준규","userId":"16577167999398926509"}},"outputId":"1b6b0a5b-026b-43cd-b87e-ec7d5ea76b97"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["tf.float32"]},"metadata":{},"execution_count":22}],"source":["np_array = np.zeros((2, 2))\n","tf_tensor = tf.convert_to_tensor(np_array, dtype=\"float32\")\n","tf_tensor.dtype"]},{"cell_type":"markdown","metadata":{"id":"rZ81ZG4_XUpG"},"source":["#### 혼합 정밀도로 훈련하기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Tqdr_zVIXUpG"},"outputs":[],"source":["from tensorflow import keras\n","keras.mixed_precision.set_global_policy(\"mixed_float16\")"]},{"cell_type":"markdown","metadata":{"id":"6r22tP6lXUpG"},"source":["### 다중 GPU 훈련"]},{"cell_type":"markdown","metadata":{"id":"HHSSsesIXUpG"},"source":["#### 두 개 이상의 GPU 활용하기"]},{"cell_type":"markdown","metadata":{"id":"29E2U9hfXUpK"},"source":["#### 단일 호스트, 다중 장치 동기 훈련"]},{"cell_type":"markdown","metadata":{"id":"M2j2mshGXUpK"},"source":["### TPU 훈련"]},{"cell_type":"markdown","metadata":{"id":"b4amcy-EXUpK"},"source":["#### 구글 코랩에서 TPU 사용하기"]},{"cell_type":"markdown","metadata":{"id":"SDiWhaFDXUpK"},"source":["#### 스텝 융합을 활용하여 TPU 활용도 높이기"]},{"cell_type":"markdown","metadata":{"id":"cUQXQO7FXUpK"},"source":["## 요약"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"Keras-tuner hyperparameter tuning","provenance":[{"file_id":"https://github.com/rickiepark/deep-learning-with-python-2nd/blob/main/chapter13_best-practices-for-the-real-world.ipynb","timestamp":1661403488083}]},"kernelspec":{"display_name":"default:Python","language":"python","name":"conda-env-default-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.10"},"accelerator":"GPU","gpuClass":"standard"},"nbformat":4,"nbformat_minor":0}